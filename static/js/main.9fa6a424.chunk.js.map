{"version":3,"sources":["Components/Login/Login.module.css","Components/PasswordRecovery/PasswordRecovery.module.css","Components/NewPassword/NewPassword.module.css","App/App.module.css","Components/Pack/Packs.module.css","Components/Profile/Profile.module.css","Components/LogOut/LogOut.module.css","Components/Pack/OnePack/OnePack.module.css","Components/Registration/Registartion.module.css","Reducers/RegistrationReducer.ts","api/projectAPI.ts","Reducers/App_reducer.ts","Reducers/LoginReducer.ts","Components/Login/Login.tsx","Reducers/AuthReducer.ts","Components/Registration/Registration.tsx","Reducers/PasswordRecoveryReducer.ts","Components/LogOut/LogOut.tsx","Components/Profile/Profile.tsx","Reducers/CardsReducer.ts","Components/PasswordRecovery/PasswordRecovery.tsx","Components/NewPassword/NewPassword.tsx","Components/Header/Heder.tsx","Components/Image/preloader.svg","Components/common/Preloder/preloder.tsx","Components/Pack/OnePack/OnePack.tsx","Components/Pack/Packs.tsx","Components/Pages/Error404.tsx","App/App.tsx","App/Store.ts","index.tsx","Components/Header/Header.module.css"],"names":["module","exports","AUTH_ACTIONS_TYPE","instance","axios","create","baseURL","withCredentials","projectAPI","data","post","recoveryData","delete","cardsPackAPI","page","pageCount","get","cardsPack","packsId","initialState","status","setAppStatusAC","type","isLoggedIn","dataLogin","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","responseError","token","setLoginDataAC","value","setDataResponseAC","setResponseErrorAC","setResponseTokenAC","Login","useState","setEmail","password","setPassword","setRememberMe","typePassword","setTypePassword","dispatch","useDispatch","useSelector","state","login","to","className","style","main","mainBlock","title","subTitle","form","formInput","placeholder","onChange","event","currentTarget","photoEye","onClick","formError","forgotPassword","checked","loginButton","then","res","catch","response","askAboutAccount","singUp","ACTION_TYPES","isRegistration","setResponseError","SET_RESPONSE_ERROR","registrationTC","SET_REGISTRATION_DATA","Registration","registration","isAuth","confirmPassword","setConfirmPassword","setError","typeConfirmPassword","setTypeConfirmPassword","setRegistrationData","test","PATH","profile","formInputLastChild","onKeyPress","charCode","flexButtons","cancelButton","logisterButton","RECOVERY_ACTIONS_TYPE","LogOut","logoutHandler","useCallback","logoutButton","Profile","userData","useEffect","JSON","stringify","isRecovery","setRecoveryFlagAC","SET_RECOVERY_FLAG","setResponseErrorPassword","PasswordRecovery","passwordRecovery","isRedirect","setRedirect","onRedirectToLogin","e","textAfterInput","mainButton","passwordRecoveryTC","from","message","tryLogin","NewPassword","useParams","newPassword","setNewPassword","Header","navigation","item","active","activeClassName","activeLink","Preloader","src","preloader","alt","OnePack","props","flexCards","cardsCount","onClickDeletePack","packId","href","cardPacks","user_id","cardPacksTotalCount","maxCardsCount","minCardsCount","getCardsPackTC","GET_CARDS_PACK","err","Pack","cardsFromState","cards","titlePacks","setTitlePacks","allPacks","map","pack","flexCardsTitle","createCardsPackTC","Error404","wrapper","App","app","navBar","preLoader","path","render","rootReducer","combineReducers","action","IS_AUTH","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa6a424.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__R58mq\",\"mainBlock\":\"Login_mainBlock__2tRx_\",\"title\":\"Login_title__1b00q\",\"subTitle\":\"Login_subTitle__2tKqF\",\"form\":\"Login_form__2Ivo1\",\"formInput\":\"Login_formInput__1sFCW\",\"forgotPassword\":\"Login_forgotPassword__2nEYB\",\"loginButton\":\"Login_loginButton__1nXFy\",\"askAboutAccount\":\"Login_askAboutAccount__xHRcp\",\"singUp\":\"Login_singUp__XiyS5\",\"formError\":\"Login_formError__Pxc59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PasswordRecovery_main___oq8f\",\"mainBlock\":\"PasswordRecovery_mainBlock__3WHjD\",\"title\":\"PasswordRecovery_title__1Acmp\",\"subTitle\":\"PasswordRecovery_subTitle__1rKY3\",\"form\":\"PasswordRecovery_form__1nyou\",\"formInput\":\"PasswordRecovery_formInput__3PDG7\",\"textAfterInput\":\"PasswordRecovery_textAfterInput__3MO8l\",\"mainButton\":\"PasswordRecovery_mainButton__2nU89\",\"askAboutAccount\":\"PasswordRecovery_askAboutAccount__1ca_d\",\"tryLogin\":\"PasswordRecovery_tryLogin__2mAHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__2-Z9P\",\"mainBlock\":\"NewPassword_mainBlock__1BrAL\",\"title\":\"NewPassword_title__2aCRh\",\"subTitle\":\"NewPassword_subTitle__zIXsd\",\"form\":\"NewPassword_form__3jlP4\",\"formInput\":\"NewPassword_formInput__F1OCV\",\"textAfterInput\":\"NewPassword_textAfterInput__jmogO\",\"mainButton\":\"NewPassword_mainButton__1h9og\",\"askAboutAccount\":\"NewPassword_askAboutAccount__13Wwh\",\"tryLogin\":\"NewPassword_tryLogin__1Kb4r\",\"formError\":\"NewPassword_formError__sL_cW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__j2gE3\",\"navBar\":\"App_navBar__xKh2I\",\"preLoader\":\"App_preLoader__3vzw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__22nBf\",\"flexCards\":\"Packs_flexCards__2xHmI\",\"flexCardsTitle\":\"Packs_flexCardsTitle__OLcXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__EznwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutButton\":\"LogOut_logoutButton__3FCq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"OnePack_main__swEvi\",\"flexCards\":\"OnePack_flexCards__1km6Z\",\"flexCardsTitle\":\"OnePack_flexCardsTitle__3MDgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registartion_main__3_vL6\",\"mainBlock\":\"Registartion_mainBlock__3ru_Y\",\"title\":\"Registartion_title__22IXl\",\"subTitle\":\"Registartion_subTitle__1_-p8\",\"form\":\"Registartion_form__nuBsx\",\"formInput\":\"Registartion_formInput__32eaf\",\"photoEye\":\"Registartion_photoEye__V10oD\",\"formInputLastChild\":\"Registartion_formInputLastChild__3Ptax\",\"formError\":\"Registartion_formError__2Gh4d\",\"flexButtons\":\"Registartion_flexButtons__2ZsxK\",\"cancelButton\":\"Registartion_cancelButton__3Db0F\",\"logisterButton\":\"Registartion_logisterButton__DqyiJ\"};","import {Dispatch} from \"redux\";\r\nimport {ErrorDataType, projectAPI, RegistrationDataType} from \"../api/projectAPI\";\r\nimport {setAppStatusAC} from \"./App_reducer\";\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n    SET_REGISTRATION_DATA = \"SET_REGISTRATION_DATA\",\r\n    SET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n    isRegistration: false,\r\n    responseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: RegistrationReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA:\r\n            return {...state, isRegistration: action.isRegistration}\r\n        case AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n            return {...state, responseError: action.responseError}\r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const setRegistrationData = (isRegistration: boolean) =>\r\n    ({type: AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA, isRegistration} as const)\r\nexport const setResponseError = (responseError: string) =>\r\n    ({type: AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError} as const)\r\n\r\n//Thunks\r\nexport const registrationTC = (data: RegistrationDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.registration(data)\r\n        .then(res => {\r\n            dispatch(setRegistrationData(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseError(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n    ReturnType<typeof setRegistrationData> |\r\n    ReturnType<typeof setResponseError>\r\n\r\n\r\n","import axios from \"axios\"\r\n\r\n//Types\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | null\r\n    publicCardPacksCount: number\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error: string;\r\n    token: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type PasswordRecoveryDataType = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}\r\nexport type ErrorDataType = {\r\n    response: {\r\n        data: ErrorRegistration\r\n    }\r\n}\r\ntype ErrorRegistration = {\r\n    emailRegExp: {},\r\n    error: string\r\n    in: string\r\n    isEmailValid: boolean\r\n    isPassValid: boolean\r\n    passwordRegExp: string\r\n}\r\nexport type newPasswordTCType = {\r\n    newPassword: string\r\n    token: string\r\n}\r\n\r\n// Settings\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    /*baseURL: \"http://localhost:7542/2.0/\",*/\r\n    withCredentials: true,\r\n})\r\n\r\n// API\r\nexport const projectAPI = {\r\n    login(data: LoginType) {\r\n        return instance.post<ResponseType>(\"/auth/login\", data)\r\n    },\r\n    registration(data: RegistrationDataType) {\r\n        return instance.post('auth/register', data)\r\n    },\r\n    passwordRecovery(recoveryData: PasswordRecoveryDataType) {\r\n        return instance.post('auth/forgot', recoveryData)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me',{})\r\n    },\r\n    isAuth() {\r\n        return instance.post('auth/me')\r\n    },\r\n    setNewPassword(data: any) {\r\n        return instance.post('auth/set-new-password', data)\r\n    }\r\n}\r\nexport const cardsPackAPI = {\r\n    getCardsPack(min: number = 3, max: number = 9, page: number = 1, pageCount: number = 10) {\r\n        return instance.get(`cards/pack?page=${page}&pageCount=${pageCount}&sortPacks=0updated`)\r\n    },\r\n    createCardsPack(cardsPack: any) {\r\n        return instance.post('cards/pack', cardsPack);\r\n    },\r\n    deleteCardsPack(packsId: string) {\r\n        return instance.delete(`cards/pack?id=${packsId}`)\r\n    }\r\n}\r\n\r\n","\r\n//Types\r\nexport type RequestStatusType = 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    status: 'loading' as RequestStatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type AppReducerActionType = SetAppStatus\r\nexport type SetAppStatus = ReturnType<typeof setAppStatusAC>\r\n\r\n//Reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppReducerActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status};\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {type: 'APP/SET-STATUS', status} as const\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {ErrorDataType, LoginType, projectAPI, ResponseType} from \"../api/projectAPI\";\r\nimport {setAppStatusAC} from \"./App_reducer\";\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    dataLogin: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: 0,\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\"\r\n    },\r\n    responseError: \"\",\r\n    token: ''\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateLoginType = initialState, action: LoginReducerActionType): InitialStateLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-LOGIN-DATA\":\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"LOGIN/SET-DATA\":\r\n            return {...state, dataLogin: action.data}\r\n        case \"LOGIN/SET-RESPONSE-ERROR\":\r\n            return {...state, responseError: action.responseError}\r\n        case 'LOGIN/SET-RESPONSE-TOKEN':\r\n            return {...state, token: action.token}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setLoginDataAC = (value: boolean) =>\r\n    ({type: \"LOGIN/SET-LOGIN-DATA\", value} as const)\r\nexport const setDataResponseAC = (data: ResponseType) =>\r\n    ({type: \"LOGIN/SET-DATA\", data} as const)\r\nexport const setResponseErrorAC = (responseError: string) =>\r\n    ({type: \"LOGIN/SET-RESPONSE-ERROR\", responseError} as const)\r\nexport const setResponseTokenAC = (token: string) =>\r\n    ({type: \"LOGIN/SET-RESPONSE-TOKEN\", token} as const)\r\n\r\n//Thunks\r\nexport const loginTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.login(data)\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseTokenAC(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.logout()\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(false))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n//Types\r\nexport type LoginReducerActionType =\r\n    ReturnType<typeof setLoginDataAC>\r\n    | ReturnType<typeof setDataResponseAC>\r\n    | ReturnType<typeof setResponseErrorAC>\r\n    | ReturnType<typeof setResponseTokenAC>\r\n\r\nexport type InitialStateLoginType = typeof initialState\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Login.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {loginTC, setResponseErrorAC} from \"../../Reducers/LoginReducer\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const responseError = useSelector<AppRootStateType, string>(state => state.login.responseError)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    const setUserData = () => {\r\n        dispatch(loginTC({ email, password, rememberMe }))\r\n    }\r\n    const onSetUpEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpRememberMe = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign In\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onSetUpEmail} />\r\n                    </div>\r\n                    <div className={style.formInput}>\r\n                        <input type={typePassword} placeholder='Enter your password' onChange={onSetUpPassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypePassword} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <div className={style.forgotPassword}>\r\n                        <input type={\"checkbox\"} checked={rememberMe} onChange={onSetUpRememberMe} />RememberMe\r\n                    </div>\r\n                    <div>\r\n                        <button className={style.loginButton} onClick={setUserData}>Login</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.askAboutAccount}>\r\n                    <span>Don’t have an account?</span>\r\n                </div>\r\n                <div className={style.singUp}>\r\n                    <span>Sign Up</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport {setDataResponseAC, setLoginDataAC, setResponseErrorAC, setResponseTokenAC} from \"./LoginReducer\";\r\nimport {ErrorDataType, projectAPI} from \"../api/projectAPI\";\r\nimport {setAppStatusAC} from \"./App_reducer\";\r\n\r\nexport enum ACTION_TYPES {\r\n    IS_AUTH = \"IS_AUTH\"\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setIsAuth>\r\n\r\nlet initialState = {\r\n    isAuth: false\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.IS_AUTH:\r\n            return {\r\n                ...state, isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsAuth = (isAuth: boolean) =>\r\n    ({type: ACTION_TYPES.IS_AUTH, isAuth} as const)\r\n\r\nexport const isAuthTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.isAuth().then(res => {\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        }\r\n    ).catch((error: ErrorDataType) => {\r\n        dispatch(setResponseErrorAC(error.response.data.error))\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport style from './Registartion.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {registrationTC, setResponseError} from \"../../Reducers/RegistrationReducer\";\r\nimport {PATH} from \"../../App/App\";\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch();\r\n    const isRegistration = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistration)\r\n    const responseError = useSelector<AppRootStateType, string>(state => state.registration.responseError)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n    const [typeConfirmPassword, setTypeConfirmPassword] = useState<string>('password')\r\n\r\n    const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n    const onChangeConfirmPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n    const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.charCode === 13) {\r\n            setRegistrationData()\r\n        }\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n\r\n    const onClickTypeConfirmPassword = () => {\r\n        if (typeConfirmPassword === 'password') {\r\n            setTypeConfirmPassword('text')\r\n        } else if (typeConfirmPassword === 'text') {\r\n            setTypeConfirmPassword('password')\r\n        }\r\n    }\r\n\r\n    const setRegistrationData = () => {\r\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            setError('Incorrect password')\r\n        } /*else if (!/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8,}$/i.test(password)) {\r\n            setError('Incorrect password')\r\n        }*/ else {\r\n            if (password === confirmPassword) {\r\n                dispatch(registrationTC({ email, password }))\r\n                setEmail('')\r\n                setPassword('')\r\n                setConfirmPassword('')\r\n                setError('')\r\n            } else {\r\n                setPassword('')\r\n                setConfirmPassword('')\r\n                setError('Password does not match')\r\n            }\r\n        }\r\n    }\r\n    const onChangeCancel = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('')\r\n        dispatch(setResponseError(''))\r\n    }\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.login} />\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={PATH.profile} />\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign Up\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' value={email} onChange={onChangeEmail} />\r\n                    </div>\r\n                    <div className={`${style.formInput}`}>\r\n                        <input type={typePassword} placeholder='Enter your password' value={password} onChange={onChangePassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypePassword}/>\r\n                    </div>\r\n                    <div className={`${style.formInput} ${style.formInputLastChild}`}>\r\n                        <input type={typeConfirmPassword} placeholder='Confirm your password' value={confirmPassword} onKeyPress={onKeyPressHandler} onChange={onChangeConfirmPassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypeConfirmPassword}/>\r\n                        <span className={style.formError}>{error ? error : responseError ? responseError : ''}</span>\r\n                    </div>\r\n                    <div className={style.flexButtons}>\r\n                        <div >\r\n                            <button className={style.cancelButton} onClick={onChangeCancel}>Cancel</button>\r\n                        </div>\r\n                        <div>\r\n                            <button className={style.logisterButton} onClick={setRegistrationData}>Register</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport {ErrorDataType, newPasswordTCType, PasswordRecoveryDataType, projectAPI} from \"../api/projectAPI\";\r\nimport {setAppStatusAC} from \"./App_reducer\";\r\n\r\nexport enum RECOVERY_ACTIONS_TYPE {\r\n    SET_RECOVERY_FLAG = \"SET_RECOVERY_DATA\",\r\n    SET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n    isRecovery: false,\r\n    responseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: PasswordRecoveryReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FLAG:\r\n            return {...state, isRecovery: action.isRecovery}\r\n        case RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n            return {...state, responseError: action.responseError}\r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const setRecoveryFlagAC = (isRecovery: boolean) =>\r\n    ({type: RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FLAG, isRecovery} as const)\r\nexport const setResponseErrorPassword = (responseError: string) =>\r\n    ({type: RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError} as const)\r\n\r\n//Thunks\r\nexport const passwordRecoveryTC = (recoveryData: PasswordRecoveryDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.passwordRecovery(recoveryData)\r\n        .then(res => {\r\n            dispatch(setRecoveryFlagAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorPassword(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const setNewPasswordTC = (data: newPasswordTCType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.setNewPassword(data)\r\n        .then(res => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorPassword(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n// Types\r\nexport type PasswordRecoveryReducerActionsType =\r\n    ReturnType<typeof setRecoveryFlagAC> |\r\n    ReturnType<typeof setResponseErrorPassword>\r\n\r\n\r\n","import React, {useCallback} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport style from './LogOut.module.css'\r\nimport {logoutTC} from \"../../Reducers/LoginReducer\";\r\n\r\n\r\nexport const LogOut= () => {\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [dispatch])\r\n\r\n    return <>\r\n        <button className={style.logoutButton} onClick={logoutHandler}>LOGOUT</button>\r\n    </>\r\n}","import React, {useEffect} from 'react'\r\nimport style from \"./Profile.module.css\"\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App/App\";\r\nimport {isAuthTC} from \"../../Reducers/AuthReducer\";\r\nimport { LogOut } from '../LogOut/LogOut';\r\n\r\ntype DataLoginType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string\r\n    avatar: string | null,\r\n    publicCardPacksCount: number,\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector<AppRootStateType, DataLoginType>(state => state.login.dataLogin)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        if (!userData.created) {\r\n            dispatch(isAuthTC());\r\n        }\r\n    }, [dispatch])\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.login}/>\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            {JSON.stringify(userData)}\r\n            <button><LogOut/></button>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {AppThunk} from \"../App/Store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppStatusAC} from \"./App_reducer\";\r\nimport {cardsPackAPI} from \"../api/projectAPI\";\r\n\r\nexport enum ACTION_TYPES {\r\n    GET_CARDS_PACK = 'GET_CARDS_PACK'\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [\r\n        {\r\n            _id: '',\r\n            user_id: '',\r\n            name: '',\r\n            cardsCount: 0,\r\n            created: '',\r\n            updated: ''\r\n        }\r\n    ],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 0,\r\n    pageCount: 0\r\n}\r\n\r\nexport type InitialCardsStateType = typeof initialState;\r\n\r\nexport const cardsReducer = (state: InitialCardsStateType = initialState, action: CardsPackActionType): InitialCardsStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.GET_CARDS_PACK:\r\n            return {\r\n                ...state, cardPacks: action.data.cardPacks.map(pack => ({...pack}))\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getAllCardsPackAC = (data: InitialCardsStateType) =>\r\n    ({type: ACTION_TYPES.GET_CARDS_PACK, data})\r\n\r\nexport const getCardsPackTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsPackAPI.getCardsPack()\r\n        .then(res => {\r\n            dispatch(getAllCardsPackAC(res.data))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const createCardsPackTC = (cardsPack: any): AppThunk => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsPackAPI.createCardsPack(cardsPack)\r\n        .then(res => {\r\n            dispatch(getCardsPackTC())\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const deleteCardsPackTC = (packsId: string): AppThunk => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsPackAPI.deleteCardsPack(packsId)\r\n        .then(res => {\r\n            dispatch(getCardsPackTC())\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport type CardsPackActionType = ReturnType<typeof getAllCardsPackAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport style from \"./PasswordRecovery.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {passwordRecoveryTC, setResponseErrorPassword} from \"../../Reducers/PasswordRecoveryReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const dispatch = useDispatch()\r\n    const isRecovery = useSelector<AppRootStateType, boolean>(state => state.passwordRecovery.isRecovery)\r\n    const responseError = useSelector<AppRootStateType, string>(state => state.passwordRecovery.responseError)\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [isRedirect, setRedirect] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseErrorPassword(\"\"))\r\n    }\r\n    const onSendEmail = () => {\r\n        const recoveryData = {\r\n            email: email,\r\n            from: 'test-front-admin <ai73a@yandex.by>)',\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> \r\n                        password recovery link: <a href='https://dimak0489.github.io/Project-Friday/#//newPassword/$token$'>link</a>\r\n                      </div>`\r\n        }\r\n        dispatch(passwordRecoveryTC(recoveryData))\r\n    }\r\n    if (isRecovery) {\r\n        return (<Redirect to={'/newPassword'} />)\r\n    }\r\n    const onRedirectToLogin = () => {\r\n        setRedirect(true)\r\n    }\r\n    if (isRedirect) {\r\n        return (<Redirect to={'/login'} />)\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onChangeEmail} value={email}/>\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Enter your email address and we will send you further instructions\r\n                    </p>\r\n                    <div>\r\n                        <button className={style.mainButton} onClick={onSendEmail}>Send Instructions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={style.askAboutAccount} onClick={onRedirectToLogin}>\r\n                    <span>Did you remember your password?</span>\r\n                </div>\r\n                <div className={style.tryLogin} onClick={onRedirectToLogin}>\r\n                    <span>Try logging in</span>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport style from './NewPassword.module.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {setNewPasswordTC, setRecoveryFlagAC} from \"../../Reducers/PasswordRecoveryReducer\";\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch();\r\n    dispatch(setRecoveryFlagAC(false))\r\n\r\n    const {token} = useParams<{ token: string }>()\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value);\r\n    }\r\n    const onChangeNewPasswordAPI = () => {\r\n        dispatch(setNewPasswordTC({newPassword, token}))\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"password\" placeholder='Enter your new password' value={newPassword}\r\n                               onChange={onChangeNewPassword}/>\r\n                        <span className={style.formError}/>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Create new password and we will send you further instructions to email\r\n                    </p>\r\n                    <div>\r\n                        <button onClick={onChangeNewPasswordAPI} className={style.mainButton}>Create new password\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Header.module.css\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.navigation}>\r\n            <div className={`${style.item} ${style.active}`}>\r\n                <NavLink to={\"/registration\"} activeClassName={style.activeLink}>Registration</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/login\"} activeClassName={style.activeLink}>Login</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={style.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/passwordRecovery\"} activeClassName={style.activeLink}>PasswordRecovery</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={`/newPassword/`} activeClassName={style.activeLink}>NewPassword</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={`/pack/`} activeClassName={style.activeLink}>Pack</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.b0090460.svg\";","import React from \"react\";\r\nimport preloader from \"../../Image/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt={\"\"}/>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport style from '../OnePack/OnePack.module.css';\r\n\r\ntype OnePackType = {\r\n\tpackId: string\r\n\tname: string\r\n\tcardsCount: number\r\n\tupdated: string\r\n\tonClickDeletePack: (packId: string) => void\r\n}\r\n\r\nexport const OnePack = (props: OnePackType) => {\r\n\r\n\tconst onClickDeletePackOnButton = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\tprops.onClickDeletePack(props.packId)\r\n\t}\r\n\treturn <div className={style.flexCards}>\r\n\t\t<div>{props.name}</div>\r\n\t\t<div>{props.cardsCount}</div>\r\n\t\t<div>{props.updated}</div>\r\n\t\t<div><button onClick={onClickDeletePackOnButton}>delete</button></div>\r\n\t\t<div><button>update</button></div>\r\n\t\t<div><a href=\"#\">cards</a></div>\r\n\t</div>\r\n}","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport style from '../Pack/Packs.module.css';\r\nimport {OnePack} from './OnePack/OnePack';\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {createCardsPackTC, deleteCardsPackTC, getCardsPackTC, InitialCardsStateType} from \"../../Reducers/CardsReducer\";\r\n\r\nexport const Pack = () => {\r\n    const dispatch = useDispatch();\r\n    const cardsFromState = useSelector<AppRootStateType, InitialCardsStateType>(state => state.cards);\r\n    const [titlePacks, setTitlePacks] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsPackTC())\r\n    }, [dispatch])\r\n\r\n    const onChangeNewTitlePacks = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitlePacks(event.currentTarget.value);\r\n    }\r\n\r\n    const cardsPack = {\r\n        name: titlePacks\r\n    }\r\n\r\n    const onClickCreateCardsPack = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        dispatch(createCardsPackTC({cardsPack}));\r\n        setTitlePacks('')\r\n    }\r\n\r\n    const onClickDeletePack = useCallback((packId: string) => {\r\n        dispatch(deleteCardsPackTC(packId))\r\n    }, [cardsFromState])\r\n\r\n    const allPacks = cardsFromState.cardPacks.map(pack => <OnePack\r\n        packId={pack._id}\r\n        name={pack.name}\r\n        cardsCount={pack.cardsCount}\r\n        updated={pack.updated}\r\n        onClickDeletePack={onClickDeletePack}/>\r\n    )\r\n    return (\r\n        <div className={style.main}>\r\n            <div>PacksPage</div>\r\n            <div className={style.flexCardsTitle}>\r\n                <div>name</div>\r\n                <div>cardsCount</div>\r\n                <div>updated</div>\r\n                <div><input type=\"text\" value={titlePacks} onChange={onChangeNewTitlePacks}/></div>\r\n\r\n                <div>\r\n                    <button onClick={onClickCreateCardsPack}>add</button>\r\n                </div>\r\n            </div>\r\n            <div>{allPacks}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport style from \"./Error404.module.css\"\n\n\nexport const Error404 = () => {\n    return (\n        <div className={style.wrapper}>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\n\n","import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport style from './App.module.css';\nimport {Login} from \"../Components/Login/Login\";\nimport {Registration} from '../Components/Registration/Registration';\nimport {Profile} from '../Components/Profile/Profile';\nimport {PasswordRecovery} from '../Components/PasswordRecovery/PasswordRecovery';\nimport {NewPassword} from '../Components/NewPassword/NewPassword';\nimport {Header} from \"../Components/Header/Heder\";\nimport {Preloader} from \"../Components/common/Preloder/preloder\";\nimport {useSelector} from 'react-redux';\nimport {AppRootStateType} from \"./Store\";\nimport {Pack} from '../Components/Pack/Packs';\nimport { Error404 } from '../Components/Pages/Error404';\n\nexport const PATH = {\n    login: '/login',\n    registration: '/registration',\n    profile: '/profile',\n    Error404: '/404',\n    passwordRecovery: '/passwordRecovery',\n    newPassword: '/newPassword',\n    test: '/test',\n    pack: '/pack'\n}\n\nexport const App = () => {\n    const status = useSelector<AppRootStateType, string>(state => state.app.status)\n    return (\n        <div className={style.app}>\n            <div className={style.navBar}><Header/></div>\n            {status === 'loading' && <div className={style.preLoader}> <Preloader/></div>}\n            <Switch>\n                <Route path={PATH.login} render={() => <Login/>}/>\n                <Route path={PATH.registration} render={() => <Registration/>}/>\n                <Route path={PATH.passwordRecovery} render={() => <PasswordRecovery/>}/>\n                <Route path={PATH.newPassword} render={() => <NewPassword/>}/>\n                <Route path={PATH.profile} render={() => <Profile/>}/>\n                <Route path={PATH.pack} render={() => <Pack />} />\n                <Route path={PATH.Error404} render={() => <Error404/>}/>\n                <Redirect from={'*'} to={'/404'}/>\n            </Switch>\n        </div>\n    );\n}\n\n\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport {loginReducer, LoginReducerActionType} from \"../Reducers/LoginReducer\";\r\nimport {registrationReducer, RegistrationReducerActionsType} from \"../Reducers/RegistrationReducer\";\r\nimport {passwordRecoveryReducer, PasswordRecoveryReducerActionsType} from \"../Reducers/PasswordRecoveryReducer\";\r\nimport {authReducer, ProfileActionsType} from '../Reducers/AuthReducer';\r\nimport {appReducer, AppReducerActionType} from \"../Reducers/App_reducer\";\r\nimport {CardsPackActionType, cardsReducer } from '../Reducers/CardsReducer';\r\n\r\nconst  rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    app: appReducer,\r\n    isAuth: authReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nexport type AppThunk = ThunkAction<void, AppRootStateType, unknown, AppActionType>\r\ntype AppActionType = AppReducerActionType | ProfileActionsType | CardsPackActionType | LoginReducerActionType | PasswordRecoveryReducerActionsType | RegistrationReducerActionsType;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App/App';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from './App/Store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__G3ZBz\",\"item\":\"Header_item__1yMtP\",\"activeLink\":\"Header_activeLink__Y6ywc\"};"],"sourceRoot":""}