{"version":3,"sources":["Components/PasswordRecovery/PasswordRecovery.module.css","Components/NewPassword/NewPassword.module.css","Components/Cards/Cards.module.css","App/App.module.css","Components/Pack/Packs.module.css","Components/Search/Search.module.css","Components/Profile/Profile.module.css","Components/LogOut/LogOut.module.css","Components/Pack/OnePack/OnePack.module.css","Components/Header/Header.module.css","Components/Registration/Registartion.module.css","Components/Registration/RegistrationReducer.ts","api/projectAPI.ts","App/App_reducer.ts","Components/Login/LoginReducer.ts","Components/Login/Login.tsx","Reducers/AuthReducer.ts","Components/Registration/Registration.tsx","Components/PasswordRecovery/PasswordRecoveryReducer.ts","Components/LogOut/LogOut.tsx","Components/Profile/Profile.tsx","Components/Search/searchReducer.ts","Components/PasswordRecovery/PasswordRecovery.tsx","Components/NewPassword/NewPassword.tsx","Components/Header/Heder.tsx","Components/Image/preloader.svg","Components/common/Preloder/preloder.tsx","Components/Pack/OnePack/OnePack.tsx","Components/Pack/packsReducer.ts","Components/Cards/CardsReducer.ts","Components/Search/Search.tsx","Components/common/Range/SuperRange.tsx","Components/common/Range/Range.tsx","Components/Pack/Packs.tsx","Components/Cards/Cards.tsx","App/App.tsx","App/Store.ts","index.tsx","Components/Login/Login.module.css"],"names":["module","exports","AUTH_ACTIONS_TYPE","instance","axios","create","baseURL","withCredentials","projectAPI","data","post","recoveryData","delete","cardsPackAPI","page","pageCount","get","cardsPack","packsId","cardsPack_id","initialState","status","setAppStatusAC","type","isLoggedIn","dataLogin","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","responseError","token","setLoginDataAC","value","setDataResponseAC","setResponseErrorAC","setResponseTokenAC","Login","useState","setEmail","password","setPassword","setRememberMe","typePassword","setTypePassword","dispatch","useDispatch","useSelector","state","login","to","PATH","profile","className","style","main","mainBlock","title","subTitle","form","formInput","placeholder","onChange","event","currentTarget","photoEye","onClick","formError","forgotPassword","checked","loginButton","then","res","catch","response","askAboutAccount","singUp","ACTION_TYPES","isRegistration","setResponseError","SET_RESPONSE_ERROR","registrationTC","SET_REGISTRATION_DATA","Registration","registration","isAuth","confirmPassword","setConfirmPassword","setError","typeConfirmPassword","setTypeConfirmPassword","setRegistrationData","test","formInputLastChild","onKeyPress","charCode","flexButtons","cancelButton","logisterButton","RECOVERY_ACTIONS_TYPE","LogOut","logoutHandler","useCallback","logoutButton","Profile","userData","useEffect","JSON","stringify","isRecovery","setRecoveryFlagAC","SET_RECOVERY_FLAG","setResponseErrorPassword","PasswordRecovery","passwordRecovery","isRedirect","setRedirect","onRedirectToLogin","e","textAfterInput","mainButton","passwordRecoveryTC","from","message","tryLogin","NewPassword","useParams","newPassword","setNewPassword","Header","navigation","item","active","activeClassName","activeLink","Preloader","src","preloader","alt","OnePack","props","flexCards","cardsCount","onClickDeletePack","packId","href","cardPacks","user_id","cardPacksTotalCount","maxCardsCount","minCardsCount","getCardsPackTC","GET_PACKS_PACK","err","Search","inputValue","setInputValue","onSubmit","searchValue","SEARCH_VALUE","searchInput","autoFocus","searchButton","SuperRange","onChangeRange","step","min","max","Slider","valueLabelDisplay","aria-labelledby","Range","value1","setValue1","value2","setValue2","Array","isArray","values","Pack","cardsFromState","packs","titlePacks","setTitlePacks","allPacks","map","pack","components","flexCardsTitle","createCardsPackTC","cards","answer","question","grade","shots","cardsTotalCount","maxGrade","minGrade","packUserId","getCardsTC","GET_CARDS","Cards","allCards","table","borderTable","bodyTable","c","Error404","App","app","navBar","preLoader","path","render","rootReducer","combineReducers","action","IS_AUTH","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de5a0a47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PasswordRecovery_main___oq8f\",\"mainBlock\":\"PasswordRecovery_mainBlock__3WHjD\",\"title\":\"PasswordRecovery_title__1Acmp\",\"subTitle\":\"PasswordRecovery_subTitle__1rKY3\",\"form\":\"PasswordRecovery_form__1nyou\",\"formInput\":\"PasswordRecovery_formInput__3PDG7\",\"textAfterInput\":\"PasswordRecovery_textAfterInput__3MO8l\",\"mainButton\":\"PasswordRecovery_mainButton__2nU89\",\"askAboutAccount\":\"PasswordRecovery_askAboutAccount__1ca_d\",\"tryLogin\":\"PasswordRecovery_tryLogin__2mAHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__2-Z9P\",\"mainBlock\":\"NewPassword_mainBlock__1BrAL\",\"title\":\"NewPassword_title__2aCRh\",\"subTitle\":\"NewPassword_subTitle__zIXsd\",\"form\":\"NewPassword_form__3jlP4\",\"formInput\":\"NewPassword_formInput__F1OCV\",\"textAfterInput\":\"NewPassword_textAfterInput__jmogO\",\"mainButton\":\"NewPassword_mainButton__1h9og\",\"askAboutAccount\":\"NewPassword_askAboutAccount__13Wwh\",\"tryLogin\":\"NewPassword_tryLogin__1Kb4r\",\"formError\":\"NewPassword_formError__sL_cW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Cards_main__svb3d\",\"search\":\"Cards_search__mKOlD\",\"components\":\"Cards_components__3_Qty\",\"values\":\"Cards_values__1_uXH\",\"table\":\"Cards_table__zzRoJ\",\"borderTable\":\"Cards_borderTable__1hqeZ\",\"bodyTable\":\"Cards_bodyTable__3-6hJ\",\"paginator\":\"Cards_paginator__3lYYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__j2gE3\",\"navBar\":\"App_navBar__xKh2I\",\"preLoader\":\"App_preLoader__3vzw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__22nBf\",\"flexCards\":\"Packs_flexCards__2xHmI\",\"flexCardsTitle\":\"Packs_flexCardsTitle__OLcXu\",\"components\":\"Packs_components__21FTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchButton\":\"Search_searchButton__RmHGi\",\"searchInput\":\"Search_searchInput__c46k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__EznwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutButton\":\"LogOut_logoutButton__3FCq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"OnePack_main__swEvi\",\"flexCards\":\"OnePack_flexCards__1km6Z\",\"flexCardsTitle\":\"OnePack_flexCardsTitle__3MDgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__G3ZBz\",\"item\":\"Header_item__1yMtP\",\"activeLink\":\"Header_activeLink__Y6ywc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registartion_main__3_vL6\",\"mainBlock\":\"Registartion_mainBlock__3ru_Y\",\"title\":\"Registartion_title__22IXl\",\"subTitle\":\"Registartion_subTitle__1_-p8\",\"form\":\"Registartion_form__nuBsx\",\"formInput\":\"Registartion_formInput__32eaf\",\"photoEye\":\"Registartion_photoEye__V10oD\",\"formInputLastChild\":\"Registartion_formInputLastChild__3Ptax\",\"formError\":\"Registartion_formError__2Gh4d\",\"flexButtons\":\"Registartion_flexButtons__2ZsxK\",\"cancelButton\":\"Registartion_cancelButton__3Db0F\",\"logisterButton\":\"Registartion_logisterButton__DqyiJ\"};","import {Dispatch} from \"redux\";\r\nimport {ErrorDataType, projectAPI, RegistrationDataType} from \"../../api/projectAPI\";\r\nimport {setAppStatusAC} from \"../../App/App_reducer\";\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n    SET_REGISTRATION_DATA = \"SET_REGISTRATION_DATA\",\r\n    SET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n    isRegistration: false,\r\n    responseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: RegistrationReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA:\r\n            return {...state, isRegistration: action.isRegistration}\r\n        case AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n            return {...state, responseError: action.responseError}\r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const setRegistrationData = (isRegistration: boolean) =>\r\n    ({type: AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA, isRegistration} as const)\r\nexport const setResponseError = (responseError: string) =>\r\n    ({type: AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError} as const)\r\n\r\n//Thunks\r\nexport const registrationTC = (data: RegistrationDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.registration(data)\r\n        .then(res => {\r\n            dispatch(setRegistrationData(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseError(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n    ReturnType<typeof setRegistrationData> |\r\n    ReturnType<typeof setResponseError>\r\n\r\n\r\n","import axios from \"axios\"\r\n\r\n//Types\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | null\r\n    publicCardPacksCount: number\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error: string;\r\n    token: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type PasswordRecoveryDataType = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}\r\nexport type ErrorDataType = {\r\n    response: {\r\n        data: ErrorRegistration\r\n    }\r\n}\r\ntype ErrorRegistration = {\r\n    emailRegExp: {},\r\n    error: string\r\n    in: string\r\n    isEmailValid: boolean\r\n    isPassValid: boolean\r\n    passwordRegExp: string\r\n}\r\nexport type newPasswordTCType = {\r\n    newPassword: string\r\n    token: string\r\n}\r\n\r\n// Settings\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    /*baseURL: \"http://localhost:7542/2.0/\",*/\r\n    withCredentials: true,\r\n})\r\n\r\n// API\r\nexport const projectAPI = {\r\n    login(data: LoginType) {\r\n        return instance.post<ResponseType>(\"/auth/login\", data)\r\n    },\r\n    registration(data: RegistrationDataType) {\r\n        return instance.post('auth/register', data)\r\n    },\r\n    passwordRecovery(recoveryData: PasswordRecoveryDataType) {\r\n        return instance.post('auth/forgot', recoveryData)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me',{})\r\n    },\r\n    isAuth() {\r\n        return instance.post('auth/me')\r\n    },\r\n    setNewPassword(data: any) {\r\n        return instance.post('auth/set-new-password', data)\r\n    }\r\n}\r\nexport const cardsPackAPI = {\r\n    getCardsPack(min: number = 3, max: number = 9, page: number = 1, pageCount: number = 10) {\r\n        return instance.get(`cards/pack?page=${page}&pageCount=${pageCount}&sortPacks=0updated`)\r\n    },\r\n    createCardsPack(cardsPack: any) {\r\n        return instance.post('cards/pack', cardsPack);\r\n    },\r\n    deleteCardsPack(packsId: string) {\r\n        return instance.delete(`cards/pack?id=${packsId}`)\r\n    },\r\n    getCards(cardsPack_id: string) {\r\n        return instance.get(`cards/card?cardsPack_id=${cardsPack_id}`)\r\n    }\r\n}\r\n\r\n","\r\n//Types\r\nexport type RequestStatusType = 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    status: 'loading' as RequestStatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type AppReducerActionType = ReturnType<typeof setAppStatusAC>\r\n\r\n//Reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppReducerActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status};\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {type: 'APP/SET-STATUS', status} as const\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {ErrorDataType, LoginType, projectAPI, ResponseType} from \"../../api/projectAPI\";\r\nimport {setAppStatusAC} from \"../../App/App_reducer\";\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    dataLogin: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: 0,\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\"\r\n    },\r\n    responseError: \"\",\r\n    token: ''\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateLoginType = initialState, action: LoginReducerActionType): InitialStateLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-LOGIN-DATA\":\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"LOGIN/SET-DATA\":\r\n            return {...state, dataLogin: action.data}\r\n        case \"LOGIN/SET-RESPONSE-ERROR\":\r\n            return {...state, responseError: action.responseError}\r\n        case 'LOGIN/SET-RESPONSE-TOKEN':\r\n            return {...state, token: action.token}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setLoginDataAC = (value: boolean) =>\r\n    ({type: \"LOGIN/SET-LOGIN-DATA\", value} as const)\r\nexport const setDataResponseAC = (data: ResponseType) =>\r\n    ({type: \"LOGIN/SET-DATA\", data} as const)\r\nexport const setResponseErrorAC = (responseError: string) =>\r\n    ({type: \"LOGIN/SET-RESPONSE-ERROR\", responseError} as const)\r\nexport const setResponseTokenAC = (token: string) =>\r\n    ({type: \"LOGIN/SET-RESPONSE-TOKEN\", token} as const)\r\n\r\n//Thunks\r\nexport const loginTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.login(data)\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseTokenAC(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.logout()\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(false))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n//Types\r\nexport type LoginReducerActionType =\r\n    ReturnType<typeof setLoginDataAC>\r\n    | ReturnType<typeof setDataResponseAC>\r\n    | ReturnType<typeof setResponseErrorAC>\r\n    | ReturnType<typeof setResponseTokenAC>\r\n\r\nexport type InitialStateLoginType = typeof initialState\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Login.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {loginTC, setResponseErrorAC} from \"./LoginReducer\";\r\nimport {PATH} from \"../../App/App\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const responseError = useSelector<AppRootStateType, string>(state => state.login.responseError)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.profile}/>\r\n    }\r\n\r\n    const setUserData = () => {\r\n        dispatch(loginTC({ email, password, rememberMe }))\r\n    }\r\n    const onSetUpEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpRememberMe = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign In\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onSetUpEmail} />\r\n                    </div>\r\n                    <div className={style.formInput}>\r\n                        <input type={typePassword} placeholder='Enter your password' onChange={onSetUpPassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypePassword} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <div className={style.forgotPassword}>\r\n                        <input type={\"checkbox\"} checked={rememberMe} onChange={onSetUpRememberMe} />RememberMe\r\n                    </div>\r\n                    <div>\r\n                        <button className={style.loginButton} onClick={setUserData}>Login</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.askAboutAccount}>\r\n                    <span>Don’t have an account?</span>\r\n                </div>\r\n                <div className={style.singUp}>\r\n                    <span>Sign Up</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport {setDataResponseAC, setLoginDataAC, setResponseErrorAC, setResponseTokenAC} from \"../Components/Login/LoginReducer\";\r\nimport {ErrorDataType, projectAPI} from \"../api/projectAPI\";\r\nimport {setAppStatusAC} from \"../App/App_reducer\";\r\n\r\nexport enum ACTION_TYPES {\r\n    IS_AUTH = \"IS_AUTH\"\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setIsAuth>\r\n\r\nlet initialState = {\r\n    isAuth: false\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.IS_AUTH:\r\n            return {\r\n                ...state, isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsAuth = (isAuth: boolean) =>\r\n    ({type: ACTION_TYPES.IS_AUTH, isAuth} as const)\r\n\r\nexport const isAuthTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.isAuth().then(res => {\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        }\r\n    ).catch((error: ErrorDataType) => {\r\n        dispatch(setResponseErrorAC(error.response.data.error))\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport style from './Registartion.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {registrationTC, setResponseError} from \"./RegistrationReducer\";\r\nimport {PATH} from \"../../App/App\";\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch();\r\n    const isRegistration = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistration)\r\n    const responseError = useSelector<AppRootStateType, string>(state => state.registration.responseError)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n    const [typeConfirmPassword, setTypeConfirmPassword] = useState<string>('password')\r\n\r\n    const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n    const onChangeConfirmPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n    const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.charCode === 13) {\r\n            setRegistrationData()\r\n        }\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n\r\n    const onClickTypeConfirmPassword = () => {\r\n        if (typeConfirmPassword === 'password') {\r\n            setTypeConfirmPassword('text')\r\n        } else if (typeConfirmPassword === 'text') {\r\n            setTypeConfirmPassword('password')\r\n        }\r\n    }\r\n\r\n    const setRegistrationData = () => {\r\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            setError('Incorrect password')\r\n        } /*else if (!/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8,}$/i.test(password)) {\r\n            setError('Incorrect password')\r\n        }*/ else {\r\n            if (password === confirmPassword) {\r\n                dispatch(registrationTC({ email, password }))\r\n                setEmail('')\r\n                setPassword('')\r\n                setConfirmPassword('')\r\n                setError('')\r\n            } else {\r\n                setPassword('')\r\n                setConfirmPassword('')\r\n                setError('Password does not match')\r\n            }\r\n        }\r\n    }\r\n    const onChangeCancel = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('')\r\n        dispatch(setResponseError(''))\r\n    }\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.login} />\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={PATH.profile} />\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign Up\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' value={email} onChange={onChangeEmail} />\r\n                    </div>\r\n                    <div className={`${style.formInput}`}>\r\n                        <input type={typePassword} placeholder='Enter your password' value={password} onChange={onChangePassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypePassword}/>\r\n                    </div>\r\n                    <div className={`${style.formInput} ${style.formInputLastChild}`}>\r\n                        <input type={typeConfirmPassword} placeholder='Confirm your password' value={confirmPassword} onKeyPress={onKeyPressHandler} onChange={onChangeConfirmPassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypeConfirmPassword}/>\r\n                        <span className={style.formError}>{error ? error : responseError ? responseError : ''}</span>\r\n                    </div>\r\n                    <div className={style.flexButtons}>\r\n                        <div >\r\n                            <button className={style.cancelButton} onClick={onChangeCancel}>Cancel</button>\r\n                        </div>\r\n                        <div>\r\n                            <button className={style.logisterButton} onClick={setRegistrationData}>Register</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport {ErrorDataType, newPasswordTCType, PasswordRecoveryDataType, projectAPI} from \"../../api/projectAPI\";\r\nimport {setAppStatusAC} from \"../../App/App_reducer\";\r\n\r\nexport enum RECOVERY_ACTIONS_TYPE {\r\n    SET_RECOVERY_FLAG = \"SET_RECOVERY_DATA\",\r\n    SET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n    isRecovery: false,\r\n    responseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: PasswordRecoveryReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FLAG:\r\n            return {...state, isRecovery: action.isRecovery}\r\n        case RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n            return {...state, responseError: action.responseError}\r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const setRecoveryFlagAC = (isRecovery: boolean) =>\r\n    ({type: RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FLAG, isRecovery} as const)\r\nexport const setResponseErrorPassword = (responseError: string) =>\r\n    ({type: RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError} as const)\r\n\r\n//Thunks\r\nexport const passwordRecoveryTC = (recoveryData: PasswordRecoveryDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.passwordRecovery(recoveryData)\r\n        .then(res => {\r\n            dispatch(setRecoveryFlagAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorPassword(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const setNewPasswordTC = (data: newPasswordTCType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    projectAPI.setNewPassword(data)\r\n        .then(res => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorPassword(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n// Types\r\nexport type PasswordRecoveryReducerActionsType =\r\n    ReturnType<typeof setRecoveryFlagAC> |\r\n    ReturnType<typeof setResponseErrorPassword>\r\n\r\n\r\n","import React, {useCallback} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport style from './LogOut.module.css'\r\nimport {logoutTC} from \"../Login/LoginReducer\";\r\n\r\n\r\nexport const LogOut= () => {\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [dispatch])\r\n\r\n    return <>\r\n        <button className={style.logoutButton} onClick={logoutHandler}>LOGOUT</button>\r\n    </>\r\n}","import React, {useEffect} from 'react'\r\nimport style from \"./Profile.module.css\"\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App/App\";\r\nimport {isAuthTC} from \"../../Reducers/AuthReducer\";\r\nimport { LogOut } from '../LogOut/LogOut';\r\n\r\ntype DataLoginType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string\r\n    avatar: string | null,\r\n    publicCardPacksCount: number,\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector<AppRootStateType, DataLoginType>(state => state.login.dataLogin)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        if (!userData.created) {\r\n            dispatch(isAuthTC());\r\n        }\r\n    }, [dispatch])\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.login}/>\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            {JSON.stringify(userData)}\r\n            <button><LogOut/></button>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export enum ACTION_TYPES {\r\n    SEARCH_VALUE = \"SEARCH_VALUE\"\r\n}\r\nconst initialState = {\r\n    searchValue: \"\"\r\n}\r\nexport type InitialStateSearch = typeof initialState\r\nexport type SearchActionType = ReturnType<typeof setSearchValueAC>\r\n\r\n//Reducer\r\nexport const searchReducer = (state: InitialStateSearch, action: SearchActionType): InitialStateSearch => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SEARCH_VALUE: {\r\n            return {...state, searchValue: action.searchValue}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Action\r\nexport const setSearchValueAC = (searchValue: string) => ({type: ACTION_TYPES.SEARCH_VALUE, searchValue})\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport style from \"./PasswordRecovery.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {passwordRecoveryTC, setResponseErrorPassword} from \"./PasswordRecoveryReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const dispatch = useDispatch()\r\n    const isRecovery = useSelector<AppRootStateType, boolean>(state => state.passwordRecovery.isRecovery)\r\n    const responseError = useSelector<AppRootStateType, string>(state => state.passwordRecovery.responseError)\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [isRedirect, setRedirect] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseErrorPassword(\"\"))\r\n    }\r\n    const onSendEmail = () => {\r\n        const recoveryData = {\r\n            email: email,\r\n            from: 'test-front-admin <ai73a@yandex.by>)',\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> \r\n                        password recovery link: <a href='https://dimak0489.github.io/Project-Friday/#//newPassword/$token$'>link</a>\r\n                      </div>`\r\n        }\r\n        dispatch(passwordRecoveryTC(recoveryData))\r\n    }\r\n    if (isRecovery) {\r\n        return (<Redirect to={'/newPassword'} />)\r\n    }\r\n    const onRedirectToLogin = () => {\r\n        setRedirect(true)\r\n    }\r\n    if (isRedirect) {\r\n        return (<Redirect to={'/login'} />)\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onChangeEmail} value={email}/>\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Enter your email address and we will send you further instructions\r\n                    </p>\r\n                    <div>\r\n                        <button className={style.mainButton} onClick={onSendEmail}>Send Instructions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={style.askAboutAccount} onClick={onRedirectToLogin}>\r\n                    <span>Did you remember your password?</span>\r\n                </div>\r\n                <div className={style.tryLogin} onClick={onRedirectToLogin}>\r\n                    <span>Try logging in</span>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport style from './NewPassword.module.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {setNewPasswordTC, setRecoveryFlagAC} from \"../PasswordRecovery/PasswordRecoveryReducer\";\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch();\r\n    dispatch(setRecoveryFlagAC(false))\r\n\r\n    const {token} = useParams<{ token: string }>()\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value);\r\n    }\r\n    const onChangeNewPasswordAPI = () => {\r\n        dispatch(setNewPasswordTC({newPassword, token}))\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"password\" placeholder='Enter your new password' value={newPassword}\r\n                               onChange={onChangeNewPassword}/>\r\n                        <span className={style.formError}/>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Create new password and we will send you further instructions to email\r\n                    </p>\r\n                    <div>\r\n                        <button onClick={onChangeNewPasswordAPI} className={style.mainButton}>Create new password\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Header.module.css\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.navigation}>\r\n            <div className={`${style.item} ${style.active}`}>\r\n                <NavLink to={\"/registration\"} activeClassName={style.activeLink}>Registration</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/login\"} activeClassName={style.activeLink}>Login</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={style.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/passwordRecovery\"} activeClassName={style.activeLink}>PasswordRecovery</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={`/newPassword/`} activeClassName={style.activeLink}>NewPassword</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={`/pack/`} activeClassName={style.activeLink}>Pack</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={`/cards`} activeClassName={style.activeLink}>Cards</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.b0090460.svg\";","import React from \"react\";\r\nimport preloader from \"../../Image/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <img src={preloader} alt={\"\"}/>\r\n}\r\n\r\n","import React from 'react';\r\nimport style from '../OnePack/OnePack.module.css';\r\n\r\ntype OnePackType = {\r\n\tpackId: string\r\n\tname: string\r\n\tcardsCount: number\r\n\tupdated: string\r\n\tonClickDeletePack: (packId: string) => void\r\n}\r\n\r\nexport const OnePack = (props: OnePackType) => {\r\n\r\n\tconst onClickDeletePackOnButton = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\tprops.onClickDeletePack(props.packId)\r\n\t}\r\n\treturn <div className={style.flexCards}>\r\n\t\t<div>{props.name}</div>\r\n\t\t<div>{props.cardsCount}</div>\r\n\t\t<div>{props.updated}</div>\r\n\t\t<div><button onClick={onClickDeletePackOnButton}>delete</button></div>\r\n\t\t<div><button>update</button></div>\r\n\t\t<div><a href=\"#\">cards</a></div>\r\n\t</div>\r\n}","import {AppThunk} from \"../../App/Store\";\r\nimport { setAppStatusAC } from '../../App/App_reducer';\r\nimport {cardsPackAPI} from \"../../api/projectAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type CardsPackActionType = ReturnType<typeof getAllCardsPackAC>\r\nexport enum ACTION_TYPES {\r\n\tGET_PACKS_PACK = 'GET_PACKS_PACK'\r\n}\r\n\r\nconst initialState = {\r\n\tcardPacks: [\r\n\t\t{\r\n\t\t\t_id: '',\r\n\t\t\tuser_id: '',\r\n\t\t\tname: '',\r\n\t\t\tcardsCount: 0,\r\n\t\t\tcreated: '',\r\n\t\t\tupdated: ''\r\n\t\t}\r\n\t],\r\n\tcardPacksTotalCount: 0,\r\n\tmaxCardsCount: 0,\r\n\tminCardsCount: 0,\r\n\tpage: 0,\r\n\tpageCount: 0\r\n}\r\n\r\nexport type initialCardsStateType = typeof initialState;\r\n\r\n//Reducer\r\nexport const packsReducer = (state: initialCardsStateType = initialState, action: CardsPackActionType): initialCardsStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTION_TYPES.GET_PACKS_PACK:\r\n\t\t\treturn {\r\n\t\t\t\t...state, cardPacks: action.data.cardPacks.map(pack => ({ ...pack }))\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n//Action\r\nexport const getAllCardsPackAC = (data: initialCardsStateType) => ({ type: ACTION_TYPES.GET_PACKS_PACK, data })\r\n//Thunk\r\nexport const getCardsPackTC = () => (dispatch: Dispatch) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tcardsPackAPI.getCardsPack().then(res => {\r\n\t\tdispatch(getAllCardsPackAC(res.data))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch(err => {\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\n\r\nexport const createCardsPackTC = (cardsPack: any): AppThunk => dispatch => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tcardsPackAPI.createCardsPack(cardsPack).then(res => {\r\n\t\tdispatch(getCardsPackTC())\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch(err => {\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\n\r\nexport const deleteCardsPackTC = (packsId: string): AppThunk => dispatch => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tcardsPackAPI.deleteCardsPack(packsId).then(res => {\r\n\t\tdispatch(getCardsPackTC())\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch(err => {\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport { setAppStatusAC } from \"../../App/App_reducer\";\r\nimport {cardsPackAPI} from \"../../api/projectAPI\";\r\n\r\n\r\nexport enum ACTION_TYPES {\r\n    GET_CARDS = \"GET_CARDS\"\r\n}\r\nlet initialState = {\r\n    cards: [\r\n        {\r\n            answer: \"\",\r\n            question: \"\",\r\n            cardsPack_id: \"\",\r\n            grade: \"\",\r\n            shots: 1,\r\n            user_id: \"\",\r\n            created: \"\",\r\n            updated: \"\",\r\n            _id: \"\"\r\n        }\r\n    ],\r\n    cardsTotalCount: 0,\r\n    maxGrade: \"\",\r\n    minGrade: \"\",\r\n    page: 0,\r\n    pageCount: 0,\r\n    packUserId: \"\"\r\n}\r\n\r\nexport type InitialStateCards = typeof initialState\r\nexport type CardsActionType = ReturnType<typeof getCardsAC>\r\n\r\n//Reducer\r\nexport const cardsReducer = (state: InitialStateCards = initialState, action: CardsActionType): InitialStateCards => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.GET_CARDS:\r\n            return {...state, cards: action.data.cards }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Action\r\nexport const getCardsAC = (data: InitialStateCards) => ({type:ACTION_TYPES.GET_CARDS, data})\r\n\r\n//Thunk\r\nexport const getCardsTC = (cardsPack_id: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsPackAPI.getCards(cardsPack_id)\r\n        .then(res => {\r\n            dispatch(getCardsAC(res.data))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}","import React, {ChangeEvent, useCallback, useState} from 'react'\r\nimport style from './Search.module.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setSearchValueAC} from \"./searchReducer\";\r\nimport {getCardsPackTC} from \"../Pack/packsReducer\";\r\n\r\n\r\n\r\nexport const Search = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(setSearchValueAC(inputValue))\r\n        dispatch(getCardsPackTC())\r\n        setInputValue('')\r\n    }, [dispatch, inputValue])\r\n\r\n    return (\r\n        <div>\r\n            <input className={style.searchInput}\r\n                   onChange={onChange}\r\n                   value={inputValue}\r\n                   type=\"text\"\r\n                   placeholder=\"Search name\"\r\n                   autoFocus>\r\n\r\n            </input>\r\n            <button type=\"submit\"\r\n                    onClick={onSubmit}\r\n                    className={style.searchButton}>\r\n                Search\r\n            </button>\r\n        </div>)\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange: (value: [number, number]) => void\r\n    value: [number, number]\r\n    min?: number,\r\n    max?: number,\r\n    step: number | null,\r\n}\r\n\r\nexport const SuperRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        value, onChangeRange,\r\n        min, max,\r\n        step , ...restProps\r\n    }\r\n) => {\r\n    const handleChangeSlider = (event: ChangeEvent<{}>, value: number | number[]) => {\r\n        onChangeRange && onChangeRange(value as [number, number])\r\n    }\r\n\r\n    return <Slider\r\n                value={value}\r\n                onChange={handleChangeSlider}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                step={step}\r\n            />\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport {SuperRange} from \"./SuperRange\";\r\nimport style from \"../../Cards/Cards.module.css\"\r\n\r\n\r\n\r\nexport const Range = () => {\r\n    const [value1, setValue1] = useState<number>(0);\r\n    const [value2, setValue2] = useState<number>(100);\r\n\r\n    const onChangeRange = (value: number | number[]) => {\r\n        if (Array.isArray(value)) {\r\n            setValue1(value[0])\r\n            setValue2(value[1])\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <SuperRange\r\n                value={[value1, value2]}\r\n                onChangeRange={onChangeRange}\r\n                step={1}/>\r\n            <div className={style.values}>\r\n                <span>{value1}</span>\r\n                <span>{value2}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport style from '../Pack/Packs.module.css';\r\nimport {OnePack} from './OnePack/OnePack';\r\nimport {Search} from \"../Search/Search\";\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {Range} from \"../common/Range/Range\";\r\nimport {createCardsPackTC, deleteCardsPackTC, getCardsPackTC, initialCardsStateType} from \"./packsReducer\";\r\n\r\nexport const Pack = () => {\r\n    const dispatch = useDispatch();\r\n    const cardsFromState = useSelector<AppRootStateType, initialCardsStateType>(state => state.packs);\r\n    const [titlePacks, setTitlePacks] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsPackTC())\r\n    }, [dispatch])\r\n\r\n\r\n    const onChangeNewTitlePacks = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitlePacks(event.currentTarget.value);\r\n    }\r\n\r\n    const cardsPack = {\r\n        name: titlePacks\r\n    }\r\n\r\n    const onClickCreateCardsPack = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        dispatch(createCardsPackTC({cardsPack}));\r\n        setTitlePacks('')\r\n    }\r\n    const onClickDeletePack = useCallback((packId: string) => {\r\n        dispatch(deleteCardsPackTC(packId))\r\n    }, [cardsFromState])\r\n\r\n\r\n    const allPacks = cardsFromState.cardPacks.map(pack => <OnePack\r\n            packId={pack._id}\r\n            name={pack.name}\r\n            cardsCount={pack.cardsCount}\r\n            updated={pack.updated}\r\n            onClickDeletePack={onClickDeletePack}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.components}>\r\n                <Range/>\r\n                <Search/>\r\n            </div>\r\n            <div>PacksPage</div>\r\n            <div className={style.flexCardsTitle}>\r\n                <div>name</div>\r\n                <div>cardsCount</div>\r\n                <div>updated</div>\r\n                <div><input type=\"text\" value={titlePacks} onChange={onChangeNewTitlePacks}/></div>\r\n                <div>\r\n                    <button onClick={onClickCreateCardsPack}>add</button>\r\n                </div>\r\n            </div>\r\n            <div>{allPacks}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport style from \"./Cards.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCardsTC, InitialStateCards} from \"./CardsReducer\";\r\nimport {Search} from \"../Search/Search\";\r\nimport {AppRootStateType} from \"../../App/Store\";\r\nimport {Range} from \"../common/Range/Range\";\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch()\r\n    const allCards = useSelector<AppRootStateType, InitialStateCards>(state => state.cards)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(\"\")) // id\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.components}>\r\n                <Range/>\r\n                <Search/>\r\n            </div>\r\n            <div className={style.table}>Table Cards\r\n                <div className={style.borderTable}>\r\n                    <span>Question</span>\r\n                    <span>Answer</span>\r\n                    <span>Grade</span>\r\n                    <span>Updated</span>\r\n                    <span>Url</span>\r\n                    <button>Add</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.bodyTable}>\r\n                <div className={style.borderTable}>\r\n                    {allCards.cards.map(c => c.cardsPack_id)}\r\n                    <div>\r\n                        <button>delete</button>\r\n                        <button>update</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/*<div className={style.paginator}> Paginator\r\n                <select>\r\n                    <option value={\"4\"}>4</option>\r\n                    <option value={\"7\"}>7</option>\r\n                    <option value={\"10\"}>10</option>\r\n                    <option value={\"20\"}>20</option>\r\n                    <option value={\"50\"}>50</option>\r\n                </select>\r\n                <button>Click</button>\r\n            </div>*/}\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport style from './App.module.css';\nimport {Login} from \"../Components/Login/Login\";\nimport {Registration} from '../Components/Registration/Registration';\nimport {Profile} from '../Components/Profile/Profile';\nimport {PasswordRecovery} from '../Components/PasswordRecovery/PasswordRecovery';\nimport {NewPassword} from '../Components/NewPassword/NewPassword';\nimport {Header} from \"../Components/Header/Heder\";\nimport {Preloader} from \"../Components/common/Preloder/preloder\";\nimport {useSelector} from 'react-redux';\nimport {AppRootStateType} from \"./Store\";\nimport {Pack} from '../Components/Pack/Packs';\nimport {Cards} from \"../Components/Cards/Cards\";\n\nexport const PATH = {\n    login: '/login',\n    registration: '/registration',\n    profile: '/profile',\n    Error404: '/404',\n    passwordRecovery: '/passwordRecovery',\n    newPassword: '/newPassword',\n    pack: '/pack',\n    cards: '/cards'\n}\n\nexport const App = () => {\n    const status = useSelector<AppRootStateType, string>(state => state.app.status)\n    return (\n        <div className={style.app}>\n            <div className={style.navBar}><Header/></div>\n            {status === 'loading' && <div className={style.preLoader}> <Preloader/></div>}\n            <Switch>\n                <Route path={PATH.login} render={() => <Login/>}/>\n                <Route path={PATH.registration} render={() => <Registration/>}/>\n                <Route path={PATH.passwordRecovery} render={() => <PasswordRecovery/>}/>\n                <Route path={PATH.newPassword} render={() => <NewPassword/>}/>\n                <Route path={PATH.profile} render={() => <Profile/>}/>\n                <Route path={PATH.pack} render={() => <Pack />} />\n                <Route path={PATH.cards} render={() => <Cards />} />\n                {/*<Route path={PATH.Error404} render={() => <Error404/>}/>\n                <Redirect from={'*'} to={'/404'}/>*/}\n            </Switch>\n        </div>\n    );\n}\n\n\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport {loginReducer, LoginReducerActionType} from \"../Components/Login/LoginReducer\";\r\nimport {registrationReducer, RegistrationReducerActionsType} from \"../Components/Registration/RegistrationReducer\";\r\nimport {passwordRecoveryReducer, PasswordRecoveryReducerActionsType} from \"../Components/PasswordRecovery/PasswordRecoveryReducer\";\r\nimport {authReducer, ProfileActionsType} from '../Reducers/AuthReducer';\r\nimport {appReducer, AppReducerActionType} from \"./App_reducer\";\r\nimport {CardsPackActionType, packsReducer} from \"../Components/Pack/packsReducer\";\r\nimport {cardsReducer} from \"../Components/Cards/CardsReducer\";\r\n\r\n\r\nconst  rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    app: appReducer,\r\n    isAuth: authReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nexport type AppThunk = ThunkAction<void, AppRootStateType, unknown, AppActionType>\r\ntype AppActionType = AppReducerActionType | ProfileActionsType | CardsPackActionType | LoginReducerActionType | PasswordRecoveryReducerActionsType | RegistrationReducerActionsType;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App/App';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from './App/Store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__R58mq\",\"mainBlock\":\"Login_mainBlock__2tRx_\",\"title\":\"Login_title__1b00q\",\"subTitle\":\"Login_subTitle__2tKqF\",\"form\":\"Login_form__2Ivo1\",\"formInput\":\"Login_formInput__1sFCW\",\"forgotPassword\":\"Login_forgotPassword__2nEYB\",\"loginButton\":\"Login_loginButton__1nXFy\",\"askAboutAccount\":\"Login_askAboutAccount__xHRcp\",\"singUp\":\"Login_singUp__XiyS5\",\"formError\":\"Login_formError__Pxc59\"};"],"sourceRoot":""}